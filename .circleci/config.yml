version: 2.1

# commands:
#   destroy_environment:
#     parameters:
#       when_to_run:
#         type: string
#         default: "on_fail"
#     steps:
#       - run:
#           name: Destroy environment
#           command: |
#             aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}
#           when: << parameters.when_to_run >>
jobs:
#   create_infrastructure:
#     docker:
#       - image: amazon/aws-cli
#     steps:
#       - checkout
#       - run:
#           name: Create Stack
#           command: |
#             aws cloudformation deploy \
#               --template-file template.yml \
#               --stack-name prod-${CIRCLE_WORKFLOW_ID}
#       - run: return 1
#       - destroy_environment: 
#          when_to_run: "on_fail"

  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name "${CIRCLE_WORKFLOW_ID}" \
            --parameter-overrides NAME="${CIRCLE_WORKFLOW_ID}"
      - run: aws s3 sync . s3://"${CIRCLE_WORKFLOW_ID}" --delete

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file cloudformation.yml \
            --stack-name cloudfront \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID}"
  #   docker:
  #     - image: python:3.7-alpine3.11
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints: ["3d:aa:cb:cb:96:7f:b3:16:d3:69:4b:3e:98:72:72:f4"] # You can get this ID in the section where you registered the SSH Key
  #     - run:
  #         name: Install dependencies
  #         command: |
  #           apk add --update ansible # install the dependencies needed for your playbook
      
  #     - run:
  #         name: Configure server
  #         command: |
  #           ansible-playbook -vvv -i  inventory main-remote.yml
   
  # smoke_test:
  #     docker:
  #       - image: alpine:latest
  #     steps:
  #       - run: apk add --update curl
  #       - run:
  #           name: smoke test.
  #           command: |
  #             URL="http://52.90.177.57:3000/"
  #             if curl -s --head ${URL} # test if blog.udacity. com exists;
  #             then
  #              return 0
  #             else
  #              return 1
  #             fi
            
workflows:
  my_workflow:
    jobs:
        - create_and_deploy_front_end
        - promote_to_production
            requires: [create_and_deploy_front_end]
      #- create_infrastructure
      #- create_and_deploy_front_end
      # - create_infrastructure
      # - configure_infrastructure:
      #     requires:
      #       - create_infrastructure

      # - smoke_test:
      #     requires:
      #       - configure_infrastructure